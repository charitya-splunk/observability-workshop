<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Advanced Synthetics on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/index.html</link><description>Recent content in Advanced Synthetics on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/index.xml" rel="self" type="application/rss+xml"/><item><title>1.1 Recording a test</title><link>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/1-recording-a-test/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/1-recording-a-test/index.html</guid><description>Write down a short user journey you want to test. Remember: smaller bites are easier to chew! In other words, get started with just a few steps. This is easier not only to create and maintain the test, but also to understand and act on ther results. Test the essential features to your users, like a support contact form, login widget, or date picker.
Note Record the test in the same type of viewport that you want to run it.</description></item><item><title>1.2 Create Real Browser Test</title><link>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/2-create-real-browser-test/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/2-create-real-browser-test/index.html</guid><description>In Splunk Observability Cloud, navigate to Synthetics and click on Add new test.
From the dropdown select Browser test.
You will then be presented with the Browser test content configuration page.</description></item><item><title>1.3 Import JSON</title><link>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/3-import-json/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/3-import-json/index.html</guid><description>To begin configuring our test, we need to import the JSON that we exported from the Chrome DevTools Recorder. To enable the Import button, we must first give our test a name e.g. &amp;lt;your initials&amp;gt; - Online Boutique.
Once the Import button is enabled, click on it and either drop the JSON file that you exported from the Chrome DevTools Recorder or upload the file.
Once the JSON file has been uploaded, click on Continue to edit steps</description></item><item><title>1.4 Settings</title><link>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/4-edit-test-settings/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/4-edit-test-settings/index.html</guid><description>The simple settings allow you to configure the basics of the test:
Name: The name of the test (e.g. RWC - Online Boutique). Details: Locations: The locations where the test will run from. Device: Emulate different devices and connection speeds. Also, the viewport will be adjusted to match the chosen device. Frequency: How often the test will run. Round-robin: If multiple locations are selected, the test will run from one location at a time, rather than all locations at once.</description></item><item><title>1.5 Advanced Settings</title><link>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/5-advanced-settings/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/5-advanced-settings/index.html</guid><description>Click on Advanced, these settings are optional and can be used to further configure the test.
Note In the case of this workshop, we will not be using any of these settings as this is for informational purposes only.
Security: TLS/SSL validation: When activated, this feature is used to enforce the validation of expired, invalid hostname, or untrusted issuer on SSL/TLS certificates. Authentication: Add credentials to authenticate with sites that require additional security protocols, for example from within a corporate network.</description></item><item><title>1.6 Edit test steps</title><link>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/6-edit-steps/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/6-edit-steps/index.html</guid><description>To edit the steps click on the + Edit steps or synthetic transactions button. From here, we are going to give meaningful names to each step.
For each of the four steps, we are going to give them a meaningful, readable name. For our demo site, that looks like:
Step 1 replace the text Go to URL with HomePage - Online Boutique Step 2 enter the text Select Vintage Camera Lens.</description></item><item><title>1.7 View test results</title><link>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/7-view-test-results/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.42/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/7-view-test-results/index.html</guid><description>1. Click into a spike or failure in your test run results.
2. What can you learn about this test run? If it failed, use the error message, filmstrip, video replay, and waterfall to understand what happened.
3. What do you see in the resources? Make sure to click through all of the page (or transaction) tabs.
Workshop Question Do you see anything interesting? Common issues to find and fix include: unexpected response codes, duplicate requests, forgotten third parties, large or slow files, and long gaps between requests.</description></item></channel></rss>