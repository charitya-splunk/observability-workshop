<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OpenTelemetry Collector Processors on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.23/en/other/opentelemetry-collector/4-processors/index.html</link><description>Recent content in OpenTelemetry Collector Processors on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.23/en/other/opentelemetry-collector/4-processors/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenTelemetry Collector Processors</title><link>https://splunk.github.io/observability-workshop/v5.23/en/other/opentelemetry-collector/4-processors/1-batch-processor/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.23/en/other/opentelemetry-collector/4-processors/1-batch-processor/index.html</guid><description>Batch Processor By default, only the batch processor is enabled. This processor is used to batch up data before it is exported. This is useful for reducing the number of network calls made to exporters. For this workshop we will accept the defaults:
send_batch_size (default = 8192): Number of spans, metric data points, or log records after which a batch will be sent regardless of the timeout. send_batch_size acts as a trigger and does not affect the size of the batch.</description></item><item><title>OpenTelemetry Collector Processors</title><link>https://splunk.github.io/observability-workshop/v5.23/en/other/opentelemetry-collector/4-processors/2-resource-detection/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.23/en/other/opentelemetry-collector/4-processors/2-resource-detection/index.html</guid><description>Resource Detection Processor The resourcedetection processor can be used to detect resource information from the host and append or override the resource value in telemetry data with this information.
By default, the hostname is set to the FQDN if possible, otherwise the hostname provided by the OS is used as a fallback. This logic can be changed from using using the hostname_sources configuration option. To avoid getting the FQDN and use the hostname provided by the OS, we will set the hostname_sources to os.</description></item><item><title>OpenTelemetry Collector Processors</title><link>https://splunk.github.io/observability-workshop/v5.23/en/other/opentelemetry-collector/4-processors/3-attributes/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.23/en/other/opentelemetry-collector/4-processors/3-attributes/index.html</guid><description>Attributes Processor The attributes processor modifies attributes of a span, log, or metric. This processor also supports the ability to filter and match input data to determine if they should be included or excluded for specified actions.
It takes a list of actions which are performed in order specified in the config. The supported actions are:
insert: Inserts a new attribute in input data where the key does not already exist.</description></item></channel></rss>