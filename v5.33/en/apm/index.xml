<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Splunk APM on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.33/en/apm/index.html</link><description>Recent content in Splunk APM on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.33/en/apm/index.xml" rel="self" type="application/rss+xml"/><item><title>1. The Online Boutique</title><link>https://splunk.github.io/observability-workshop/v5.33/en/apm/online-boutique/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.33/en/apm/online-boutique/index.html</guid><description>15 minutes Ninja Deploy the Online Boutique application in Kubernetes Verify the application is running Generate some artificial traffic using Locust See APM metrics in the UI Ninja - Deploy the Online Boutique 1. Check your EC2 server This workshop module assumes you are completing this after you have run the IM workshop, and still have access to your EC2 instance.
If this is the case, continue with Deploy Online Boutique, otherwise, if you have received a fresh instance, please run the first two (2) sections of Deploy the OTel Collector to get the system ready for the APM workshop, then continue with the next section.</description></item><item><title>2. Using Splunk APM</title><link>https://splunk.github.io/observability-workshop/v5.33/en/apm/using-splunk-apm/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.33/en/apm/using-splunk-apm/index.html</guid><description>15 minutes APM Overview - RED metrics Using the Service Map Introduction to Tag Spotlight Example Traces Contextual Links to Infra 1. Traces and Spans explained A trace is a collection of spans that share the same trace ID, representing a unique transaction handled by your application and its constituent services.
Each span has a name, representing the operation captured by this span, and a service name, representing within which service the operation took place.</description></item></channel></rss>