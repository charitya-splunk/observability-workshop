<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>OpenTelemetry Collector エクステンション on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.37/ja/other/opentelemetry-collector/2-extensions/index.html</link><description>Recent content in OpenTelemetry Collector エクステンション on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><language>ja</language><atom:link href="https://splunk.github.io/observability-workshop/v5.37/ja/other/opentelemetry-collector/2-extensions/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenTelemetry Collector エクステンション</title><link>https://splunk.github.io/observability-workshop/v5.37/ja/other/opentelemetry-collector/2-extensions/1-health/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.37/ja/other/opentelemetry-collector/2-extensions/1-health/index.html</guid><description>Health Check エクステンション 他のコンポーネントと同様に、エクステンションは config.yaml ファイルで設定できます。ここでは実際に config.yaml ファイルを編集して、エクステンションを設定していきましょう。デフォルトの config.yaml では、すでに pprof エクステンションと zpages エクステンションが設定されていることを確認してみてください。このワークショップでは、設定ファイルをアップデートして health_check エクステンションを追加し、ポートを解放し、外部ネットワークからコレクターのヘルスチェックにアクセスできるようにしていきます。
&amp;#8203; Command sudo vi /etc/otelcol-contrib/config.yaml &amp;#8203; Extensions Configuration extensions: health_check: endpoint: 0.0.0.0:13133 コレクターを起動します:
&amp;#8203; Command sudo systemctl restart otelcol-contrib このエクステンションはHTTPのURLを公開し、OpenTelemetory Collectorの稼働状況をチェックするプローブを提供します。このエクステンションはKubernetes環境でのLiveness/Readinessプローブとしても使われています。 curl コマンドの使い方は、curl man page を参照してください。
次のコマンドを実行します:
&amp;#8203; curl Command curl Output curl http://localhost:13133 {&amp;#34;status&amp;#34;:&amp;#34;Server available&amp;#34;,&amp;#34;upSince&amp;#34;:&amp;#34;2023-04-27T10:11:22.153295874+01:00&amp;#34;,&amp;#34;uptime&amp;#34;:&amp;#34;16m24.684476004s&amp;#34;}</description></item><item><title>OpenTelemetry Collector エクステンション</title><link>https://splunk.github.io/observability-workshop/v5.37/ja/other/opentelemetry-collector/2-extensions/2-performance/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.37/ja/other/opentelemetry-collector/2-extensions/2-performance/index.html</guid><description>Performance Profiler エクステンション Performance Profiler エクステンションは、Go の net/http/pprof エンドポイントを有効化します。これは通常、開発者がパフォーマンスプロファイルを収集し、サービスの問題を調査するために使用します。このワークショップでは詳しく紹介はしません。</description></item><item><title>OpenTelemetry Collector エクステンション</title><link>https://splunk.github.io/observability-workshop/v5.37/ja/other/opentelemetry-collector/2-extensions/3-zpages/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.37/ja/other/opentelemetry-collector/2-extensions/3-zpages/index.html</guid><description>zPages エクステンション zPages は、外部エクスポータに代わるプロセス内部の機能です。有効化すると、バックグラウンドでトレースとメトリクス情報を収集し、集計し、どのようなデータを扱ったかの Web ページを公開します。zpages は、コレクターが期待どおりに動作していることを確認するための非常に便利な診断機能です。
&amp;#8203; ServiceZ PipelineZ ExtensionZ ServiceZ は、コレクターサービスの概要と、pipelinez、extensionz、featurez zPages へのクイックアクセスを提供します。このページでは、ビルドとランタイムの情報も提供します。
URL: http://localhost:55679/debug/servicez (localhost は、適切なホスト名に切り替えてください)
PipelineZ は、コレクターで実行中のパイプラインに関する情報を提供します。タイプ、データが変更されているか、各パイプラインで使用されているレシーバー、プロセッサー、エクスポーターの情報を見ることができます。
URL: http://localhost:55679/debug/pipelinez (localhost は、適切なホスト名に切り替えてください)
ExtensionZ は、コレクターで有効化されたエクステンションを確認できます。
Example URL: http://localhost:55679/debug/extensionz (localhost は、適切なホスト名に切り替えてください)
Ninja: storage エクステンションでデータの耐久性を向上させる これをこなうには、ディストリビューションに file_storage エクステンションモジュールがインストールされていることを確認する必要があります。確認するには、otelcol-contrib components コマンドを実行します:
&amp;#8203; Command Truncated Output Full Output otelcol-contrib components # ... truncated for clarity extensions: - file_storage buildinfo: command: otelcol-contrib description: OpenTelemetry Collector Contrib version: 0.80.0 receivers: - prometheus_simple - apache - influxdb - purefa - purefb - receiver_creator - mongodbatlas - vcenter - snmp - expvar - jmx - kafka - skywalking - udplog - carbon - kafkametrics - memcached - prometheus - windowseventlog - zookeeper - otlp - awsecscontainermetrics - iis - mysql - nsxt - aerospike - elasticsearch - httpcheck - k8sobjects - mongodb - hostmetrics - signalfx - statsd - awsxray - cloudfoundry - collectd - couchdb - kubeletstats - jaeger - journald - riak - splunk_hec - active_directory_ds - awscloudwatch - sqlquery - windowsperfcounters - flinkmetrics - googlecloudpubsub - podman_stats - wavefront - k8s_events - postgresql - rabbitmq - sapm - sqlserver - redis - solace - tcplog - awscontainerinsightreceiver - awsfirehose - bigip - filelog - googlecloudspanner - cloudflare - docker_stats - k8s_cluster - pulsar - zipkin - nginx - opencensus - azureeventhub - datadog - fluentforward - otlpjsonfile - syslog processors: - resource - batch - cumulativetodelta - groupbyattrs - groupbytrace - k8sattributes - experimental_metricsgeneration - metricstransform - routing - attributes - datadog - deltatorate - spanmetrics - span - memory_limiter - redaction - resourcedetection - servicegraph - transform - filter - probabilistic_sampler - tail_sampling exporters: - otlp - carbon - datadog - f5cloud - kafka - mezmo - skywalking - awsxray - dynatrace - loki - prometheus - logging - azuredataexplorer - azuremonitor - instana - jaeger - loadbalancing - sentry - splunk_hec - tanzuobservability - zipkin - alibabacloud_logservice - clickhouse - file - googlecloud - prometheusremotewrite - awscloudwatchlogs - googlecloudpubsub - jaeger_thrift - logzio - sapm - sumologic - otlphttp - googlemanagedprometheus - opencensus - awskinesis - coralogix - influxdb - logicmonitor - signalfx - tencentcloud_logservice - awsemf - elasticsearch - pulsar extensions: - zpages - bearertokenauth - oidc - host_observer - sigv4auth - file_storage - memory_ballast - health_check - oauth2client - awsproxy - http_forwarder - jaegerremotesampling - k8s_observer - pprof - asapclient - basicauth - headers_setter このエクステンションは、エクスポーターが設定されたエンドポイントにデータを送信できない事象が発生したときに、データをディスクにキューイングする機能をエクスポーターに提供します。</description></item></channel></rss>