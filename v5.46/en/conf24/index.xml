<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Conf24 Workshops on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.46/en/conf24/index.html</link><description>Recent content in Conf24 Workshops on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.46/en/conf24/index.xml" rel="self" type="application/rss+xml"/><item><title>Workshop using the Java microservices Pet Clinic demo (Kubernetes-based).</title><link>https://splunk.github.io/observability-workshop/v5.46/en/conf24/1-zero-config-k8s/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.46/en/conf24/1-zero-config-k8s/index.html</guid><description>The goal of this workshop is to introduce the features of Splunk&amp;rsquo;s Opentelemetry Java Auto instrumentation. First, we create the workshop scenario, by installing a simple Java microservices application in Kubernetes. We then walk through the basic steps to set up the OpenTelemetry Collector in Kubernetes and enable auto-instrumentation on the existing Java application running in Kubernetes. This will start sending Opentelemetry signals to the Splunk Observability Cloud platform and enable the following components:</description></item></channel></rss>