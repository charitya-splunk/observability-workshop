<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PetClinic Java Workshop on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/index.html</link><description>Recent content in PetClinic Java Workshop on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing the OpenTelemetry Collector</title><link>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/1-otel-collector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/1-otel-collector/index.html</guid><description>1. Introduction The OpenTelemetry Collector is the core component of instrumenting infrastructure and applications. Its role is to collect and send:
Infrastructure metrics (disk, cpu, memory, etc) Application Performance Monitoring (APM) traces Profiling data Host and application logs Splunk Observability Cloud offers a wizard to walk you through the setup of the Collector on both your infrastructure and applications. By default, the wizard will only provide the commands to only install the collector.</description></item><item><title>Zero Configuration Auto Instrumentation for Java</title><link>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/2-zero-configuration/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/2-zero-configuration/index.html</guid><description>1. Spring PetClinic Application First thing we need to setup APM is&amp;hellip; well, an application. For this exercise, we will use the Spring PetClinic application. This is a very popular sample java application built with Spring framework (Springboot).
First clone the PetClinic GitHub repository, then we will compile, build, package and test the application:
git clone https://github.com/spring-projects/spring-petclinicChange into the spring-petclinic directory (and checkout a specific commit):
cd spring-petclinic &amp;amp;&amp;amp; git checkout 276880eStart a MySQL database for PetClinic to use:</description></item><item><title>3. Real User Monitoring</title><link>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/3-rum/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/3-rum/index.html</guid><description>1. Enable RUM For the Real User Monitoring (RUM) instrumentation, we will add the Open Telemetry Javascript https://github.com/signalfx/splunk-otel-js-web snippet in the pages, we will use the wizard again Data Management → Add Integration → RUM Instrumentation → Browser Instrumentation.
Select the preconfigured RUM ACCESS TOKEN from the dropdown, click Next. Enter App name and Environment using the following syntax:
[hostname]-petclinic-service - replacing [hostname] with your actual hostname. [hostname]-petclinic-env - replacing [hostname] with your actual hostname.</description></item><item><title>4. Log Observer</title><link>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/4-log-observer-connect/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.6/en/other/pet-clinic/4-log-observer-connect/index.html</guid><description>1. Introduction For the Splunk Log Observer component, we will configure the Spring PetClinic application to write logs to a file in the filesystem and configure the Splunk OpenTelemetry Collect to read (tail) that log file and report the information to the Splunk Observability Platform.
2. OpenTelemetry Filelog Configuration We need to configure the Splunk OpenTelemetry Collector to tail the Spring PetClinic log file and report the data to the Splunk Cloud HEC URL.</description></item></channel></rss>