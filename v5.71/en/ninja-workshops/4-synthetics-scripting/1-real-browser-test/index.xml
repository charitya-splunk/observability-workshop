<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>1. Real Browser Test :: Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/index.html</link><description>Introduction This workshop walks you through using the Chrome DevTools Recorder to create a synthetic transaction against a Splunk demonstration instance.
The exported JSON from the Chrome DevTools Recorder will then be used to create a Splunk Synthetic Monitoring Real Browser Test.
In addition, you will also get to learn other Splunk Synthetic Monitoring checks like API Test and Uptime Test.
Pre-requisites Google Chrome Browser installed Access to Splunk Observability Cloud</description><generator>Hugo</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/index.xml" rel="self" type="application/rss+xml"/><item><title>1.1 Recording a test</title><link>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/1-recording-a-test/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/1-recording-a-test/index.html</guid><description>Open the starting URL Open the starting URL for the workshop in Chrome. Click on the appropriate link below to open the site in a new tab.
Note The starting URL for the workshop is different for EMEA and AMER/APAC. Please use the correct URL for your region.
â€‹ EMEA Workshop URL AMER/APAC Workshop URL https://online-boutique-eu.splunko11y.com/</description></item><item><title>1.2 Create Real Browser Test</title><link>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/2-create-real-browser-test/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/2-create-real-browser-test/index.html</guid><description>In Splunk Observability Cloud, navigate to Synthetics and click on Add new test.
From the dropdown select Browser test.
You will then be presented with the Browser test content configuration page.</description></item><item><title>1.3 Import JSON</title><link>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/3-import-json/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/3-import-json/index.html</guid><description>To begin configuring our test, we need to import the JSON that we exported from the Chrome DevTools Recorder. To enable the Import button, we must first give our test a name e.g. &lt;your initials> - Online Boutique.
Once the Import button is enabled, click on it and either drop the JSON file that you exported from the Chrome DevTools Recorder or upload the file.</description></item><item><title>1.4 Settings</title><link>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/4-edit-test-settings/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/4-edit-test-settings/index.html</guid><description>The simple settings allow you to configure the basics of the test:
Name: The name of the test (e.g. RWC - Online Boutique). Details: Locations: The locations where the test will run from. Device: Emulate different devices and connection speeds. Also, the viewport will be adjusted to match the chosen device. Frequency: How often the test will run. Round-robin: If multiple locations are selected, the test will run from one location at a time, rather than all locations at once. Active: Set the test to active or inactive. ![Return to Test]For this workshop, we will configure the locations that we wish to monitor from. Click in the Locations field and you will be presented with a list of global locations (over 50 in total).</description></item><item><title>1.5 Advanced Settings</title><link>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/5-advanced-settings/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/5-advanced-settings/index.html</guid><description>Click on Advanced, these settings are optional and can be used to further configure the test.
Note In the case of this workshop, we will not be using any of these settings as this is for informational purposes only.
Security: TLS/SSL validation: When activated, this feature is used to enforce the validation of expired, invalid hostname, or untrusted issuer on SSL/TLS certificates. Authentication: Add credentials to authenticate with sites that require additional security protocols, for example from within a corporate network. By using concealed global variables in the Authentication field, you create an additional layer of security for your credentials and simplify the ability to share credentials across checks. Custom Content: Custom headers: Specify custom headers to send with each request. For example, you can add a header in your request to filter out requests from analytics on the back end by sending a specific header in the requests. You can also use custom headers to set cookies. Cookies: Set cookies in the browser before the test starts. For example, to prevent a popup modal from randomly appearing and interfering with your test, you can set cookies. Any cookies that are set will apply to the domain of the starting URL of the check. Splunk Synthetics Monitoring uses the public suffix list to determine the domain. Host overrides: Add host override rules to reroute requests from one host to another. For example, you can create a host override to test an existing production site against page resources loaded from a development site or a specific CDN edge node. Next, we will edit the test steps to provide more meaningful names for each step.</description></item><item><title>1.6 Edit test steps</title><link>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/6-edit-steps/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/6-edit-steps/index.html</guid><description>To edit the steps click on the + Edit steps or synthetic transactions button. From here, we are going to give meaningful names to each step.
For each of the four steps, we are going to give them a meaningful name.
Step 1 replace the text Go to URL with HomePage - Online Boutique Step 2 enter the text Select Vintage Camera Lens. Step 3 enter Add to Cart. Step 4 enter Place Order.</description></item><item><title>1.7 View test results</title><link>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/7-view-test-results/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/ninja-workshops/4-synthetics-scripting/1-real-browser-test/7-view-test-results/index.html</guid><description>In the Scatterplot from the previous step, click on one of the dots to drill into the test run data. Preferably, select the most recent test run (farthest to the right).</description></item></channel></rss>