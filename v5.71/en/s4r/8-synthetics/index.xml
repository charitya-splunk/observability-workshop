<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Splunk Synthetics :: Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/index.html</link><description>In this section, you will learn how to use Splunk Synthetics to monitor the performance and availability of your applications.</description><generator>Hugo</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Synthetics Dashboard</title><link>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/1-synthetics-dashboard/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/1-synthetics-dashboard/index.html</guid><description>In Splunk Observability Cloud from the main menu, click on Synthetics. Click on All or Browser tests to see the list of active tests.
During our investigation in the RUM section, we found there was an issue with the Place Order Transaction. Let’s see if we can confirm this from the Synthetics test as well. We will be using the metric First byte time for the 4th page of the test, which is the Place Order step.</description></item><item><title>2. Synthetics Test Detail</title><link>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/2-synthetics-detail/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/2-synthetics-detail/index.html</guid><description>Right now we are looking at the result of a single Synthetic Browser Test. This test is split up into Business Transactions, think of this as a group of one or more logically related interactions that represent a business-critical user flow.
Info The screenshot below doesn’t contain a red banner with an error in it however you might be seeing one in your run results. This is expected as in some cases the test run fails and does not impact the workshop.</description></item><item><title>3. Synthetics to APM</title><link>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/3-synthetics-to-apm/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/3-synthetics-to-apm/index.html</guid><description>We now should have a view similar to the one below.
Exercise In the waterfall find an entry that starts with POST checkout. Click on the > button in front of it to drop open the metadata section. Observe the metadata that is collected, and note the Server-Timing header. This header is what allows us to correlate the test run to a back-end trace. Click on the blue APM link on the POST checkout line in the waterfall.</description></item><item><title>4. Synthetics Detector</title><link>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/4-synthetics-detector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/s4r/8-synthetics/4-synthetics-detector/index.html</guid><description>Given you can run these tests 24/7, it is an ideal tool to get warned early if your tests are failing or starting to run longer than your agreed SLA instead of getting informed by social media, or Uptime websites.
To stop that from happening let’s detect if our test is taking more than 1.1 minutes.</description></item></channel></rss>