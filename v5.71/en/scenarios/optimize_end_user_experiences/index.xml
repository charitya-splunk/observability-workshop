<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Optimize End User Experiences :: Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/index.html</link><description>Use Splunk Real User Monitoring (RUM) and Synthetics to get insight into end user experience, and proactively test scenarios to improve that experience.</description><generator>Hugo</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/index.xml" rel="self" type="application/rss+xml"/><item><title>Synthetics</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/1-synthetics/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/1-synthetics/index.html</guid><description>Let’s quickly set up some tests in Synthetics to immediately start understanding our end user experience, without waiting for real users to interact with our app.
We can capture not only the performance and availability of our own apps and endpoints, but also those third parties we rely on any time of the day or night.
Tip If you find that your tests are being bot-blocked, see the docs for tips on how to allow Synthetic testing. if you need to test something that is not accessible externally, see private location instructions.</description></item><item><title>RUM</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/2-rum/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/2-rum/index.html</guid><description>End-to-end visibility helps you pinpoint customer-impacting issues from web browsers and native mobile apps to your backend services.</description></item><item><title>Advanced Synthetics</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/3-advanced-synthetics/index.html</guid><description>Proactively find and fix performance issues across user flows, business transactions and APIs to deliver better digital experiences.</description></item><item><title>Frontend Dashboards</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/4-dashboards/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/4-dashboards/index.html</guid><description>Go to Dashboards and find the End User Experiences dashboard group.
Click the three dots on the top right to open the dashboard menu, and select Save As, and include your team name and initials in the dashboard name.
Save to the dashboard group that matches your email address. Now you have your own copy of this dashboard to customize!</description></item><item><title>Detectors</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/index.html</guid><description>After we have a good understanding of our performance baseline, we can start to create Detectors so that we receive alerts when our KPIs are unexpected. If we create detectors before understanding our baseline, we run the risk of generating unnecessary alert noise.
For RUM and Synthetics, we will explore how to create detectors:
on a single Synthetic test on a single KPI in RUM on a dashboard chart For more Detector resources, please see our Observability docs, Lantern, and consider an Education course if you’d like to go more in depth with instructor guidance.</description></item><item><title>Summary</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/6-summary/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/6-summary/index.html</guid><description>In this workshop, we learned the following:
How to create simple synthetic tests so that we can quickly begin to understand the availability and performance of our application How to understand what RUM shows us about the end user experience, including specific user sessions How to write advanced synthetic browser tests to proactively test our most important user actions How to visualize our frontend performance data in context with events on dashboards How to set up detectors so we don’t have to wait to hear about issues from our end users How all of the above, plus Splunk and Google’s resources, helps us optimize end user experience There is a lot more we can do with front end performance monitoring. If you have extra time, be sure to play with the charts, detectors, and do some more synthetic testing. Remember our resources such as Lantern, Splunk Docs, and experiment with apps for Mobile RUM.</description></item><item><title>Workshop Setup and Cleanup</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/setup/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/setup/index.html</guid><description>Please follow these steps for the Optimize End User Experiences workshop setup, “behind the scenes” instructions during the workshop, and cleanup.
Before the workshop See instructions on using SWiPE for provisioning. Come up with a simple team name that your attendees will use when naming dashboards, detectors, and synthetic tests. This is intended to help you during cleanup later. For example, a specific dog breed, flower name, etc. Remind attendees throughout the workshop to include the team name and their initials when they are creating asset names. Create a Syncreator account if you do not have one already Click “Enable RUM” on the top right of the Syncreator screen. Enter your realm and your RUM token and save the form. Access your Syncreator browser site URL which is linked on the left side of the syncreator screen. Perform some interactions and close your browser session, and make sure the data starts coming into RUM in your o11y org. Check the site’s &lt;head> code to make sure the RUM instrumentation is there. Start with the Default condition active in Syncreator. Download the dashboard group and import into the workshop org if it’s not already there. Participants will clone and edit this dashboard in section 4. Download Dashboard Group JSON optimize-end-user-experiences.json (32 KB) During the workshop Provide the team name and Syncreator browser site URL to your attendees. Once everyone has saved both their RUM LCP detector and their synthetic test detector, change the Syncreator condition to Hero Image. This will mimic a large image being used on the homepage, which will spike the LCP metric. There is an excercise built in at the end of the RUM detector instructions. After the workshop Please follow the cleanup instructions. Please also use SWiPE to delete the detectors and synthetic tests created in your workshop. Per the instructions, attendees should have included your “team name” and their initials in the asset names.</description></item></channel></rss>