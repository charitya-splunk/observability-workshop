<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Detectors :: Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/index.html</link><description>After we have a good understanding of our performance baseline, we can start to create Detectors so that we receive alerts when our KPIs are unexpected. If we create detectors before understanding our baseline, we run the risk of generating unnecessary alert noise.
For RUM and Synthetics, we will explore how to create detectors:
on a single Synthetic test on a single KPI in RUM on a dashboard chart For more Detector resources, please see our Observability docs, Lantern, and consider an Education course if you’d like to go more in depth with instructor guidance.</description><generator>Hugo</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/index.xml" rel="self" type="application/rss+xml"/><item><title>Test Detectors</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/1-test-detector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/1-test-detector/index.html</guid><description>Why would we want a detector on a single Synthetic test? Some examples:
The endpoint, API transaction, or browser journey is highly critical We have deployed code changes and want to know if the resulting KPI is or is not as we expect We need to temporarily keep a close eye on a specific change we are testing and don’t want to create a lot of noise, and will disable the detector later We want to know about unexpected issues before a real user encounters them On the test overview page, click Create Detector on the top right.</description></item><item><title>RUM Detectors</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/2-rum-detector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/2-rum-detector/index.html</guid><description>Let’s say we want to know about an issue in production without waiting for a ticket from our support center. This is where creating detectors in RUM will be helpful for us.
Go to the RUM view of the Syncreator App. Scroll to the LCP chart, click the chart menu icon, and click Create Detector.</description></item><item><title>Chart Detectors</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/3-chart-detector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/optimize_end_user_experiences/5-detectors/3-chart-detector/index.html</guid><description>With our custom dashboard charts, we can create detectors focussed directly on the data and conditions we care about. In building our charts, we also built signals that can trigger alerts.
Static detectors For many KPIs, we have a static value in mind as a threshold.
In your custom End User Experience dashboard, go to the “LCP - all tests” chart.
Click the bell icon on the top right of the chart, and select “New detector from chart”</description></item></channel></rss>