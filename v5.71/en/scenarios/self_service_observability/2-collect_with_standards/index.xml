<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Collect Data with Standards :: Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/self_service_observability/2-collect_with_standards/index.html</link><description>Introduction For this workshop, we’ll be doing things that only a central tools or administration would do.
The workshop uses scripts to help with steps that aren’t part of the focus of this workshop – like how to change a kubernetes app, or start an application from a host.
Tip It can be useful to review what the scripts are doing.
So along the way it is advised to run cat &lt;filename> from time to time to see what that step just did.</description><generator>Hugo</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.71/en/scenarios/self_service_observability/2-collect_with_standards/index.xml" rel="self" type="application/rss+xml"/><item><title>Deploy Gateway</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/self_service_observability/2-collect_with_standards/1-deploy_gateway/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/self_service_observability/2-collect_with_standards/1-deploy_gateway/index.html</guid><description>Gateway First we will deploy the OTel Gateway. The workshop instructor will deploy the gateway, but we will walk through the steps here if you wish to try this yourself on a second instance.
The steps:
Click the Data Management icon in the toolbar Click the + Add integration button Click Deploy the Splunk OpenTelemetry Collector button Click Next Select Linux Change mode to Data forwarding (gateway) Set the environment to prod Choose the access token for this workshop Click Next Copy the installer script and run it in the provided linux environment. Once our gateway is started we will notice… Nothing. The gateway, by default, doesn’t send any data. It can be configured to send data, but it doesn’t by default.</description></item><item><title>Deploy Collector (Agent)</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/self_service_observability/2-collect_with_standards/2-deploy_collector_agent/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/self_service_observability/2-collect_with_standards/2-deploy_collector_agent/index.html</guid><description>Collector (Agent) Now we will deploy a collector. At first this will be configured to go directly to the back-end, but we will change the configuration and restart the collector to use the gateway.
The steps:
Click the Data Management icon in the toolbar Click the + Add integration button Click Deploy the Splunk OpenTelemetry Collector button Click Next Select Linux Leave the mode as Host monitoring (agent) Set the environment to prod Leave the rest as defaults Choose the access token for this workshop Click Next Copy the installer script and run it in the provided linux environment. This collector is sending host metrics, so you can find it in common navigators:</description></item><item><title>Reconfigure Collector</title><link>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/self_service_observability/2-collect_with_standards/3-reconfigure_collector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.71/en/scenarios/self_service_observability/2-collect_with_standards/3-reconfigure_collector/index.html</guid><description>Reconfigure Collector To reconfigure the collector we need to make these changes:
In agent_config.yaml We need to adjust the signalfx exporter to use the gateway The otlp exporter is already there, so we leave it alone We need to change the pipelines to use otlp In splunk-otel-collector.conf We need to set the SPLUNK_GATEWAY_URL to the url provided by the instructor See this docs page for more details.
The exporters will be the following:</description></item></channel></rss>