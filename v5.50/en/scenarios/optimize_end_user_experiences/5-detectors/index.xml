<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Detectors on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.50/en/scenarios/optimize_end_user_experiences/5-detectors/index.html</link><description>Recent content in Detectors on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.50/en/scenarios/optimize_end_user_experiences/5-detectors/index.xml" rel="self" type="application/rss+xml"/><item><title>Test Detectors</title><link>https://splunk.github.io/observability-workshop/v5.50/en/scenarios/optimize_end_user_experiences/5-detectors/1-test-detector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.50/en/scenarios/optimize_end_user_experiences/5-detectors/1-test-detector/index.html</guid><description>Why would we want a detector on a single Synthetic test? Some examples:
The endpoint, API transaction, or browser journey is highly critical We have deployed code changes and want to know if the resulting KPI is or is not as we expect We need to temporarily keep a close eye on a specific change we are testing and don&amp;rsquo;t want to create a lot of noise, and will disable the detector later We want to know about unexpected issues before a real user encounters them On the test overview page, click Create Detector on the top right.</description></item><item><title>RUM Detectors</title><link>https://splunk.github.io/observability-workshop/v5.50/en/scenarios/optimize_end_user_experiences/5-detectors/2-rum-detector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.50/en/scenarios/optimize_end_user_experiences/5-detectors/2-rum-detector/index.html</guid><description>Let&amp;rsquo;s say we want to know about an issue in production without waiting for a ticket from our support center. This is where creating detectors in RUM will be helpful for us.
Go to the RUM view of the Syncreator App. Scroll to the LCP chart, click the chart menu icon, and click Create Detector. Rename the test to include your team name and initials, and change the scope of the detector to App so we are not limited to a single URL or page.</description></item><item><title>Chart Detectors</title><link>https://splunk.github.io/observability-workshop/v5.50/en/scenarios/optimize_end_user_experiences/5-detectors/3-chart-detector/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.50/en/scenarios/optimize_end_user_experiences/5-detectors/3-chart-detector/index.html</guid><description>With our custom dashboard charts, we can create detectors focussed directly on the data and conditions we care about. In building our charts, we also built signals that can trigger alerts.
Static detectors For many KPIs, we have a static value in mind as a threshold.
In your custom End User Experience dashboard, go to the &amp;ldquo;LCP - all tests&amp;rdquo; chart.
Click the bell icon on the top right of the chart, and select &amp;ldquo;New detector from chart&amp;rdquo; Change the detector name to include your team name and initials, and adjust the alert details.</description></item></channel></rss>