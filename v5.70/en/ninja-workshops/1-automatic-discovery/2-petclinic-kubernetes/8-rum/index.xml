<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Real User Monitoring :: Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/index.html</link><description>To enable Real User Monitoring (RUM) instrumentation for an application, you need to add the Open Telemetry Javascript https://github.com/signalfx/splunk-otel-js-web snippet to the code base.
The Spring PetClinic application uses a single index HTML page, that is reused across all views of the application. This is the perfect location to insert the Splunk RUM instrumentation library as it will be loaded for all pages automatically.
The api-gateway service is already running the instrumentation and sending RUM traces to Splunk Observability Cloud and we will review the data in the next section.</description><generator>Hugo</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/index.xml" rel="self" type="application/rss+xml"/><item><title>Rebuild PetClinic with RUM enabled</title><link>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/1-rebuild-app/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/1-rebuild-app/index.html</guid><description>At the top of the previous code snippet, there is a reference to the file /static/env.js, which contains/sets the variables used by RUM, currently these are not configured and therefore no RUM traces are currently being sent.
Run the script that will update variables to enable RUM traces so they are viewable in Splunk Observability Cloud. Note, that the env.js script contains a deliberate JavaScript error, that will be picked up in RUM:</description></item><item><title>Select the RUM view for the Petclinic App</title><link>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/1-rum-tour/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/1-rum-tour/index.html</guid><description>Lets start a quick high level tour into RUM by clicking RUM in the left-hand menu. Then change the Environment filter (1) to the name of your workshop instance from the dropdown box, it will be &lt;INSTANCE>-workshop (1) (where INSTANCE is the value from the shell script you ran earlier). Make sure it is the only one selected.</description></item><item><title>RUM trace Waterfall view &amp; linking to APM</title><link>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/2-rum-tour/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/2-rum-tour/index.html</guid><description>In the TAG Spotlight view, you are presented with all the tags associated with the RUM data. Tags are key-value pairs that are used to identify the data. In this case, the tags are automatically generated by the OpenTelemetry instrumentation. The tags are used to filter the data and to create the charts and tables. The Tag Spotlight view allows you detect trends in behavior and to drill down into a user session.</description></item><item><title>RUM trace Waterfall view &amp; linking to APM</title><link>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/3-rum-tour/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.70/en/ninja-workshops/1-automatic-discovery/2-petclinic-kubernetes/8-rum/3-rum-tour/index.html</guid><description>We are now looking at the RUM Trace waterfall, this will tell you what happened during the session on the user device as they visited the page of our petclinic application.
If you scroll down the waterfall find click on the Vets segment on the right (1), you see a list of action that occurred during the handling of the Vets request. Note, that the HTTP request have a blue APM link before the return code. Pick one, and click on the APM link. This will show you the APM info for this Ser vice call to our Microservices in Kubernetes.</description></item></channel></rss>