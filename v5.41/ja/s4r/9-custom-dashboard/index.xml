<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>カスタム サービスヘルスダッシュボード 🏥 on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.41/ja/s4r/9-custom-dashboard/index.html</link><description>Recent content in カスタム サービスヘルスダッシュボード 🏥 on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><language>ja</language><atom:link href="https://splunk.github.io/observability-workshop/v5.41/ja/s4r/9-custom-dashboard/index.xml" rel="self" type="application/rss+xml"/><item><title>ダッシュボードの拡張</title><link>https://splunk.github.io/observability-workshop/v5.41/ja/s4r/9-custom-dashboard/1-custom-dashboard/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.41/ja/s4r/9-custom-dashboard/1-custom-dashboard/index.html</guid><description>すでに Log Observer の演習でダッシュボードに便利なログチャートを保存していますので、そのダッシュボードを拡張します。
Exercise 2つのログチャートが含まれたダッシュボードに戻るために、メインメニューから Dashboards をクリックし、Team Dashboard ビューに移動します。Dashboards の下にある Search dashboards をクリックして、Service Health Dashboard グループを検索します。 名前をクリックすると、以前に保存したダッシュボードが表示されます。 ログ情報は有用ですが、チームがこれが何かを理解できるようにするには、もう少し情報が必要です。 まず最初のステップとして、ダッシュボードに説明チャートを追加してみましょう。New text note をクリックし、ノートのテキストを次のテキストに置き換えます。その後 Save and close ボタンをクリックし、チャートに Instructions という名前を付けます。 Text note に使用する情報 これは Payment service 用のカスタムヘルスダッシュボードです。
ログに含まれるエラーに注意してください。
詳細については、リンクを参照してください。
チャートの順序があまりよくないので、役立つように順序を入れ替えてみましょう。 マウスを Instructions チャートの上端に移動させると、マウスポインタが ☩ に変わります。あなたはダッシュボード内でチャートをドラッグして移動することができます。Instructions チャートを左上の場所に移動させましょう。さらに、チャートの右端をドラッグしてページの 1/3 にサイズを変更しましょう。 Log Timeline view チャートを Instruction チャートの横にドラッグして移動させ、ページの残りの 2/3 を埋めるようにサイズを変更します。 次に、Log lines チャートをページの幅にリサイズし、少なくとも2倍の長さにリサイズします。 以下のダッシュボードのようになったはずです。 見栄えが良くなりました。さらに続けて、役立ちそうなチャートを追加していきましょう。</description></item><item><title>コピーしたチャートの追加</title><link>https://splunk.github.io/observability-workshop/v5.41/ja/s4r/9-custom-dashboard/2-add-chart/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.41/ja/s4r/9-custom-dashboard/2-add-chart/index.html</guid><description>このセクションでは、コピー＆ペーストの機能を使用してダッシュボードを拡張します。以前、APMサービスダッシュボードのセクションでチャートをコピーしました。これらのチャートをカスタムダッシュボードに追加します。
Exercise ページの上部にある 2+ を選択し、Paste charts を選択します。これによってカスタムダッシュボードにチャートを作成することができます。 チャートは現在、すべての Environments および Services のデータを表示しています。したがって、環境名と paymentservice にフィルタする設定を追加しましょう。 Request Rate の単一の値が表示されているチャートの右上にある &amp;hellip;（3つのドット）をクリックします。すると、このチャートが編集モードで開かれます。 新しい画面で、画面の中央にあるsf_environment:* x ボタン（1）の x をクリックして閉じます。 次に、+をクリックして新しいフィルタを追加します。sf_environment を選択して、ドロップダウンから [WORKSHOPNAME] を選択して Apply をクリックします。ボタンは sf_environment:[WORKSHOPNAME] に変わります。 同様の操作を sf_service ボタン（2）に対して行います。 一度今の設定を削除して、sf_service に関するフィルタ設定を作成します。フィルタの対象として、paymentservice を指定します。 設定が完了したら、Save and close ボタン（3）をクリックします。 Request Rate の数値を表示しているチャートについても、前述の4つの手順を繰り返します。 2つのチャートを更新したら、Save をクリックします。 新しく貼り付けられたチャートはダッシュボードの一番下に表示されたため、再びダッシュボードを並べ替える必要があります。 既に学んだドラッグアンドドロップおよびサイズ変更を行い、ダッシュボードを以下の画像のように整えます。 次に、実行中の Synthetic テストに基づいたカスタムチャートを作成します。</description></item><item><title>カスタムチャートの追加</title><link>https://splunk.github.io/observability-workshop/v5.41/ja/s4r/9-custom-dashboard/3-custom-chart/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.41/ja/s4r/9-custom-dashboard/3-custom-chart/index.html</guid><description>ワークショップのこのセクションでは、ダッシュボードに追加するチャートを作成し、以前に構築した Detector と紐づけします。これにより、テスト時の振る舞いを確認し、テストによって SLA 違反が発生した場合にアラートを受け取ることができます。
Exercise ダッシュボードの上部で + をクリックし、Chart を選択します。 まず、Untitled chart の入力フィールドを使用して、チャートの名前を Overall Test Duration にします。 このエクササイズでは、棒グラフまたはカラムグラフを使いたいので、チャートオプションの3番目のアイコン をクリックします。 Plot editor で、Signal の入力欄に synthetics.run.duration.time.ms（これはテストの実行の所要時間を表します）を入力し Enter キーを押します。 現時点では、異なる色の棒が表示されます。これはテスト実行元の地域ごとに色分けされたものです。ですが、これは不要なので、いくつかの解析ルールを追加してこの表示を変更できます。 では Add analytics ボタンをクリックします。 ドロップダウンから Mean オプションを選択し、mean:aggregation を選択してダイアログの外側をクリックします。メトリクスが統合され、チャートが単一の色に変わることに着目してください。 x 軸は現在、時間を表していません。これを変更するには、プロットラインの末尾にある設定 アイコンをクリックします。次のダイアログが表示されるはずです。 Display units（2）を None から Time (autoscaling)/Milliseconds(ms) に変更します。ドロップダウンが Millisecond に変わり、チャートの x 軸がテストの実行時間を表すようになります。 設定 アイコンまたはcloseボタンをクリックし、ダイアログを閉じます。 Detector を追加するには、Link Detector ボタンをクリックして、以前に作成した Detector の名前を入力します。 Detector の名前をクリックして選択します。 チャートの周りにカラーの枠が表示されることに着目しましょう。これは、アラートの状態を示しています。ダッシュボードの上部にあるベルアイコンについても同様です。以下の画像のように見えるはずです。 完了したら、Save and close ボタンをクリックします。 ダッシュボードで、チャートを以下のスクリーンショットのように移動させます。 最後に、ページの上部の三点リーダー &amp;hellip;（Event Overlay の横）をクリックし、View fullscreen をクリックします。これで壁に取り付けられたTVモニターで表示するのにも利用できます（戻るにはEscキーを押します）。 Tip 時間がある場合には、RUM メトリクスを使用してダッシュボードに別のカスタムチャートを追加してみてください。事前に用意・提供されている RUM applications ダッシュボードグループからチャートをコピーするか、rum.</description></item></channel></rss>