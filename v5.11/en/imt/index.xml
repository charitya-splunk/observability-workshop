<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Splunk IM on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.11/en/imt/index.html</link><description>Recent content in Splunk IM on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://splunk.github.io/observability-workshop/v5.11/en/imt/index.xml" rel="self" type="application/rss+xml"/><item><title>How to connect to your workshop environment</title><link>https://splunk.github.io/observability-workshop/v5.11/en/imt/initial-setup/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.11/en/imt/initial-setup/index.html</guid><description>5 minutes ü•∑üèª How to retrieve the IP address of the AWS/EC2 instance assigned to you. Connect to your instance using SSH, Putty1 or your web browser. Verify your connection to your AWS/EC2 cloud instance. Using Putty (Optional) Using Multipass (Optional) 1. AWS/EC2 IP Address In preparation for the workshop, Splunk has prepared an Ubuntu Linux instance in AWS/EC2.
To get access to the instance that you will be using in the workshop please visit the URL to access the Google Sheet provided by the workshop leader.</description></item><item><title>Deploying the OpenTelemetry Collector in Kubernetes</title><link>https://splunk.github.io/observability-workshop/v5.11/en/imt/gdi/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.11/en/imt/gdi/index.html</guid><description>15 minutes Use the Splunk Helm chart to install the OpenTelemetry Collector in K3s Explore your cluster in the Kubernetes Navigator 1. Obtain Access Token You will need to obtain your Access Token1 from the Splunk UI. You can find the workshop Access Token by clicking &amp;raquo; bottom left and then selecting Settings ‚Üí Access Tokens.
Expand the workshop token that your host has instructed you to use e.g. O11y-Workshop-ACCESS, then click on Show Token to expose your token.</description></item><item><title>Working with Dashboards</title><link>https://splunk.github.io/observability-workshop/v5.11/en/imt/dashboards/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.11/en/imt/dashboards/index.html</guid><description>20 minutes Introduction to the Dashboards and charts Editing and creating charts Filtering and analytical functions Using formulas Saving charts in a dashboard Introduction to SignalFlow 1. Dashboards Dashboards are groupings of charts and visualizations of metrics. Well-designed dashboards can provide useful and actionable insight into your system at a glance. Dashboards can be complex or contain just a few charts that drill down only into the data you want to see.</description></item><item><title>Working with Detectors</title><link>https://splunk.github.io/observability-workshop/v5.11/en/imt/detectors/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.11/en/imt/detectors/index.html</guid><description>10 minutes Create a Detector from one of your charts Setting Alert conditions Running a pre-flight check Working with muting rules 1. Introduction Splunk Observability Cloud uses detectors, events, alerts, and notifications to keep you informed when certain criteria are met. For example, you might want a message sent to a Slack channel or to an email address for the Ops team when CPU Utilization has reached 95%, or when the number of concurrent users is approaching a limit that might require you to spin up an additional AWS instance.</description></item><item><title>Monitoring as Code</title><link>https://splunk.github.io/observability-workshop/v5.11/en/imt/monitoring-as-code/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.11/en/imt/monitoring-as-code/index.html</guid><description>10 minutes Use Terraform1 to manage Observability Cloud Dashboards and Detectors Initialize the Terraform Splunk Provider2. Run Terraform to create detectors and dashboards from code using the Splunk Terraform Provider. See how Terraform can also delete detectors and dashboards. 1. Initial setup Monitoring as code adopts the same approach as infrastructure as code. You can manage monitoring the same way you do applications, servers, or other infrastructure components.
You can use monitoring as code to build out your visualisations, what to monitor, and when to alert, among other things.</description></item><item><title>Service Bureau</title><link>https://splunk.github.io/observability-workshop/v5.11/en/imt/servicebureau/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.11/en/imt/servicebureau/index.html</guid><description>10 minutes How to keep track of the usage of Observability Cloud in your organization Learn how to keep track of spend by exploring the Subscription Usage interface Creating Teams Adding notification rules to Teams Controlling usage 1. Understanding engagement To fully understand Observability Cloud engagement inside your organization, click on the &amp;raquo; bottom left and select the Settings ‚Üí Organization Overview, this will provide you with the following dashboards that shows you how your Observability Cloud organization is being used:</description></item></channel></rss>