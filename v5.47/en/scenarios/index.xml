<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Scenarios on Splunk Observability Cloud Workshops</title><link>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/index.html</link><description>Recent content in Scenarios on Splunk Observability Cloud Workshops</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://splunk.github.io/observability-workshop/v5.47/en/scenarios/index.xml" rel="self" type="application/rss+xml"/><item><title>Optimize Cloud Monitoring</title><link>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/optimize_monitoring/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/optimize_monitoring/index.html</guid><description>The elasticity of cloud architectures means that monitoring artifacts must scale elastically as well, breaking the paradigm of purpose-built monitoring assets. As a result, administrative overhead, visibility gaps, and tech debt skyrocket while MTTR slows. This typically happens for three reasons:
Complex and Inefficient Data Management: Infrastructure data is scattered across multiple tools with inconsistent naming conventions, leading to fragmented views and poor metadata and labelling. Managing multiple agents and data flows adds to the complexity.</description></item><item><title>Understand Impact of Changes</title><link>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/understand_impact_of_changes/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/understand_impact_of_changes/index.html</guid><description>Splunk Observability Cloud includes powerful features that dramatically reduce the time required for SREs to isolate issues across services, so they know which team to engage to troubleshoot the issue further, and can provide context to help engineering get a head start on debugging.
Unlocking these features requires tags to be included with your application traces. But how do you know which tags are the most valuable and how do you capture them?</description></item><item><title>Debug Problems in Microservices</title><link>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/debug_problems/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/debug_problems/index.html</guid><description>Service Maps and Traces are extremely valuable in determining what service an issue resides in. And related log data helps provide detail on why issues are occurring in that service.
But engineers sometimes need to go even deeper to debug a problem thatâ€™s occurring in one of their services.
This is where features such as Splunk&amp;rsquo;s AlwaysOn Profiling and Database Query Performance come in.
AlwaysOn Profiling continuously collects stack traces so that you can discover which lines in your code are consuming the most CPU and memory.</description></item><item><title>Optimizing End User Experiences</title><link>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/optimize_end_user_experiences/index.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://splunk.github.io/observability-workshop/v5.47/en/scenarios/optimize_end_user_experiences/index.html</guid><description>How can we use Splunk Observability to get insight into end user experience, and proactively test scenarios to improve that experience?
Sections:
Set up basic Synthetic tests to understand availability and performance ASAP Uptime test API test Single page Browser test Explore RUM to understand our real users Write advanced Synthetics tests based on what we&amp;rsquo;ve learned about our users and what we need them to do Customize dashboard charts to capture our KPIs, show trends, and show data in context of our events Create Detectors to alert on our KPIs Tip Keep in mind throughout the workshop: how can I prioritize activities strategically to get the fastest time to value for my end users and for myself/ my developers?</description></item></channel></rss>